/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ams.vistas.principal;

import com.ams.utilidades.Conexion;
import com.ams.utilidades.VariablesSesion;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import javax.swing.JOptionPane;
import com.ams.utilidades.jUtils;
import java.awt.event.KeyEvent;
import javax.persistence.EntityManager;
import com.ams.utilidades.JPAResourceBean;


/**
 *
 * @author Walter Rizo
 */
public class FormularioLogin extends javax.swing.JFrame {

    /**
     * Creates new form FormularioLogin
     */
      //almacena una referencia al EMF global para adquirir el EntityManager
    private static JPAResourceBean jpaResourceBean = new JPAResourceBean();
    
    private  String Query = null;
    private  Connection conn = null;
    private  PreparedStatement pstmnt = null;
    private  ResultSet rs = null;
    
    private int count;
    FormularioPrincipal mdi = new FormularioPrincipal();
    
 
    public FormularioLogin() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        this.setResizable(false);
        this.setTitle("Login"); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Nombre de Usuario:");
        jLabel1.setName("lblUsuario"); // NOI18N

        jLabel2.setText("Contrase√±a :");
        jLabel2.setName("lblpassword"); // NOI18N

        jTextField1.setName("txtUsername"); // NOI18N
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        jPasswordField1.setName("txtPassword"); // NOI18N
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusLost(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/key_32x32.png"))); // NOI18N
        jButton1.setToolTipText("Ingresar al sistema.");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/application-exit.png"))); // NOI18N
        jButton2.setToolTipText("Cerrar la Aplicacion.");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                            .addComponent(jPasswordField1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField1FocusGained

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusGained
        // TODO add your handling code here:
          if(jTextField1.getText().equals("")){
            jTextField1.requestFocus();
        }
    }//GEN-LAST:event_jPasswordField1FocusGained

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        jTextField1.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
        if(jTextField1.getText().equals("")){
            jTextField1.requestFocus();
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void jPasswordField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusLost
        // TODO add your handling code here:
        if(jTextField1.getText().equals("")){
            jTextField1.requestFocus();
        }else if(jPasswordField1.getPassword().length == 0){
            jPasswordField1.requestFocus();
        }
    }//GEN-LAST:event_jPasswordField1FocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        login();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            {
                login();
            }
    }//GEN-LAST:event_jPasswordField1KeyPressed
    
    public void login(){
        EntityManager oEM = jpaResourceBean.getEMF().createEntityManager();
       
        //VAriables de conexion
        VariablesSesion vs = new VariablesSesion();        
        String pUsuario = vs.getDb_user();
        String pPassword = vs.getDb_password();
        
        String user = jTextField1.getText();
        String password = new String(jPasswordField1.getPassword());
       
        //obteniendo password md5 de la contrase√±a ingresada por el usuario
        jUtils ju = new jUtils();                               
        char[] encrypted_password = ju.stringToMd5(password).toCharArray();
        
        if (jTextField1.getText().length() == 0
                        || jPasswordField1.getPassword().length == 0) {
                JOptionPane.showMessageDialog(null,
                                "Campo de usuario o contrase√±a esta vacio.");

        } else {
                    // Obtener Conexion.
                    try {
                         conn = Conexion.conectar(pUsuario, pPassword);
                    } catch (Exception e) {
                            System.out
                                      .println("No se pudo establecer conexi√≥n con la base de datos local.");
                            e.printStackTrace();
                    }

                     try {
            
                            Query = "SELECT * FROM gestion_usuario.usuarios WHERE user_name like ?;";
                            pstmnt = conn.prepareStatement(Query);
                            pstmnt.setString(1, jTextField1.getText().toString());
                            rs = pstmnt.executeQuery();
                            
                            if (rs.next()) {
                                char[] pass = rs.getString("encrypted_password")
								.toCharArray();
                                                                 
                                if (!Arrays.equals(pass, encrypted_password)) {
							JOptionPane.showMessageDialog(null,
									"Usuario o contrase√±a inv√°lido.");
                                } else {
                                    //Acceder al menu principal
                                     new ProgressThread(user).start(); 
                                }
                            } else {
                                    JOptionPane.showMessageDialog(null,
                                                    "Usuario o contrase√±a inv√°lido.");
                            }
                            
                    } catch (SQLException ex) {
                        count++;
                        if(count == 3){
                            JOptionPane.showMessageDialog(this, ex.getMessage() + 
                                " \n Intentos excedidos, cuenta deshabilitada, "
                                + "llame al administrador del sistema para que "
                                    + "le habilite su cuenta", "ERROR Message"
                                , JOptionPane.ERROR_MESSAGE);                       
                            try {
                                Thread.sleep(10000);
                            } catch (InterruptedException ex1) {                    
                            }
                            count = 0;
                            clear();
                            return;
                        }else{
                            JOptionPane.showMessageDialog(this, ex.getMessage() + 
                                    "\n quedan " + (3-count) + " intentos",
                                "ERROR Message", JOptionPane.ERROR_MESSAGE);                       
                        }

                    } finally {
                        // Cierra las conexiones y reinicia las variables
                        if (rs != null) {
                                try {
                                        pstmnt.close();
                                } catch (SQLException e) {
                                        e.printStackTrace();
                                }
                        }
                        else if (pstmnt != null) {
                                try {
                                        pstmnt.close();
                                } catch (SQLException e) {
                                        e.printStackTrace();
                                }
                        }
                        else if (conn != null) {
                                try {
                                        conn.close();
                                } catch (SQLException e) {
                                        e.printStackTrace();
                                }
                        }
                }
    
        }
    }
    
    private void clear(){
        jTextField1.setText("");
        jPasswordField1.setText("");
    }
    
     public class ProgressThread extends Thread {
        private String user;
        public ProgressThread(String user) {
            this.user = user;
        }

        
        @Override
        public void run() {
            try {
                jProgressBar1.setIndeterminate(true);
                Thread.sleep(2000);
                jProgressBar1.setIndeterminate(false);
                for (int i = 1; i <= 100; i++) {
                    jProgressBar1.setValue(i);
                    Thread.sleep(100);
                }
                
                JOptionPane.showMessageDialog(FormularioLogin.this,
                        "Bienvenido admin: " + user + " al sistema",
                        "Conexion Satisfactoria", 
                        JOptionPane.INFORMATION_MESSAGE);
               
                   setVisible(false);
                   mdi.setVisible(true);
                   
              
            } catch (InterruptedException ex) {                
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
